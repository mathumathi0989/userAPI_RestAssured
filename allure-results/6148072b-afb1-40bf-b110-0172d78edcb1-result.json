{"uuid":"6148072b-afb1-40bf-b110-0172d78edcb1","historyId":"6b8af0dfbf5145410a64b258970cb17","fullName":"src/test/resources/features/createUsers.feature:5","labels":[{"name":"host","value":"DheenatalansAir.fios-router.home"},{"name":"thread","value":"9276@DheenatalansAir.fios-router.home.main(1)"},{"name":"feature","value":"Create User API"},{"name":"story","value":"Validate create user API with data from Excel"},{"name":"suite","value":"Create User API"},{"name":"testClass","value":"Validate create user API with data from Excel"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/restassured_bdd/src/test/resources/features/createUsers.feature"},{"name":"package","value":"src.test.resources.features.createUsers_feature.Create User API"}],"links":[],"name":"Validate create user API with data from Excel","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"contentType cannot be null","trace":"java.lang.IllegalArgumentException: contentType cannot be null\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n\tat io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:217)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)\n\tat io.restassured.internal.ResponseSpecificationImpl.contentType(ResponseSpecificationImpl.groovy:442)\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.contentType(ValidatableResponseOptionsImpl.java:226)\n\tat stepdefinition.createUsertest.the_content_type_should_be_correct_from_excel_row(createUsertest.java:99)\n\tat ✽.the content type should be correct from Excel row 1(file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/restassured_bdd/src/test/resources/features/createUsers.feature:9)\n"},"stage":"finished","steps":[{"name":"Given  I have the base URL","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1727383954214,"stop":1727383954223},{"name":"When  I send a POST request with user data from Excel row 1","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1727383954225,"stop":1727383958690},{"name":"Then  I should get a valid status code from Excel row 1","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1727383958693,"stop":1727383958849},{"name":"And  the content type should be correct from Excel row 1","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"contentType cannot be null","trace":"java.lang.IllegalArgumentException: contentType cannot be null\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n\tat io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:217)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)\n\tat io.restassured.internal.ResponseSpecificationImpl.contentType(ResponseSpecificationImpl.groovy:442)\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.contentType(ValidatableResponseOptionsImpl.java:226)\n\tat stepdefinition.createUsertest.the_content_type_should_be_correct_from_excel_row(createUsertest.java:99)\n\tat ✽.the content type should be correct from Excel row 1(file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/restassured_bdd/src/test/resources/features/createUsers.feature:9)\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1727383958851,"stop":1727383958936},{"name":"And  the response data should match the request from Excel row 1","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1727383958940,"stop":1727383958941},{"name":"And  the response schema should be valid","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1727383958943,"stop":1727383958943}],"attachments":[],"parameters":[],"start":1727383954195,"stop":1727383958950}