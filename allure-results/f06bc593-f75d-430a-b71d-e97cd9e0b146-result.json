{"uuid":"f06bc593-f75d-430a-b71d-e97cd9e0b146","historyId":"fc05dcadf7b41b2994acd641f67a3f23","fullName":"src/test/resources/features/userapiFlow.feature:32","labels":[{"name":"host","value":"DheenatalansAir.fios-router.home"},{"name":"thread","value":"15597@DheenatalansAir.fios-router.home.main(1)"},{"name":"feature","value":"User Service API Operations"},{"name":"story","value":"Get User by First Name"},{"name":"suite","value":"User Service API Operations"},{"name":"testClass","value":"Get User by First Name"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/restassured_bdd/src/test/resources/features/userapiFlow.feature"},{"name":"package","value":"src.test.resources.features.userapiFlow_feature.User Service API Operations"}],"links":[],"name":"Get User by First Name","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"userName cannot be null","trace":"java.lang.IllegalArgumentException: userName cannot be null\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n\tat io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\n\tat io.restassured.internal.AuthenticationSpecificationImpl.basic(AuthenticationSpecificationImpl.groovy:46)\n\tat stepdefinition.userapiFlowtest.i_send_a_get_request_to_with_the_stored_user_first_name(userapiFlowtest.java:194)\n\tat ✽.I send a GET request to \"/users/username/{firstname}\" with the stored user first name(file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/restassured_bdd/src/test/resources/features/userapiFlow.feature:33)\n"},"stage":"finished","description":"  To test User Service API endpoints for creating, fetching, updating, and deleting users","steps":[{"name":"Given  I send a GET request to \"/users/username/{firstname}\" with the stored user first name","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"userName cannot be null","trace":"java.lang.IllegalArgumentException: userName cannot be null\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n\tat io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\n\tat io.restassured.internal.AuthenticationSpecificationImpl.basic(AuthenticationSpecificationImpl.groovy:46)\n\tat stepdefinition.userapiFlowtest.i_send_a_get_request_to_with_the_stored_user_first_name(userapiFlowtest.java:194)\n\tat ✽.I send a GET request to \"/users/username/{firstname}\" with the stored user first name(file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/restassured_bdd/src/test/resources/features/userapiFlow.feature:33)\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1727405587268,"stop":1727405587275},{"name":"Then  I should receive a valid response with status code 200","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1727405587276,"stop":1727405587276},{"name":"And  the response should contain the correct user details for the stored user first name","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1727405587276,"stop":1727405587277}],"attachments":[],"parameters":[],"start":1727405587266,"stop":1727405587277}